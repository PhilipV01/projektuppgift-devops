name: Node.js CI 


on: 
  push:
    branches: [dev,feature-CI-CD,feature-jest-test] #[dev]
  pull_request: 
    branches: [dev]  

jobs: 

  wdio-tests:

    runs-on: ubuntu-latest
    steps: 
    #fetching current ref
     - uses: actions/checkout@v2  
     #Node 
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v2
       with: 
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
     # install npm 
     - run: npm ci
     - run: npm run build --if-present
     # intall pm2 
     - run: npm install -g pm2 
     # start index.js with pm2 
     - run: pm2 start backend/index.js 
     #Chrome just incase.. 
     - run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
     - run: sudo apt install ./google-chrome-stable_current_amd64.deb  
     # installing Allure test report 
     - run: npm install @wdio/allure-reporter --save-dev
     - run: npm i -g allure-commandline 
     # Run wdio test
     - run: npm run wdio #HEADLESS_CHROME=yes WDIO_LOG_LEVEL=warn
     - run: allure generate allure-results --clean 
     - run: rm -r allureresults/historty 
     - run: cp -r allure-report/history allure-results/history 

     #REST-api

  api-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
  
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
        # install newman globally so we can run
        # postman collections
      - run: npm install -g newman 
        # install pm2 so we can run our node.js
        # based backend without blocking the terminal
      - run: npm install -g pm2
        # Copy db-template to realdb
      #- run: cp backend/databse/bookshop-template.db backend/database/bookshop.db
        # start up our backend
      - run: pm2 start backend/index.js
        # run our api tests
      - run: npm run api # <- !!! collection name in package.json need to be changed once we got proper tests

  jest-tests: 

    runs-on: ubuntu-latest

    strategy: 
      matrix: 
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{matrix.node-version}}  
      uses: actions/setup-node@v2
      with: 
        node-version: ${{matrix.node-version}}
        cache: 'npm'
    - run: npm ci 
    - run: npm run build  --if-present         
    - run: npm install -g pm2
    - run: pm2 start backend/index.js
    - run: npm run jest

#CD
#  golive:
#     # demand that the 3 tests jobs suceeed before running go love
#     needs: [api-tests,wdio-tests,jest-tests]
#     #Only run this job if the environment protection rules are fulfilled
#     # (this case, reviewer need to approves and we need to be on dev branch)
#     environment: "Dev server"
#     runs-on: ubuntu-latest
#     steps:
#       #call check out sever to checkout/pull our repo
#     - run: curl http://sub.yogadev.se/${{secrets.DEPLOYMENT_KEY}}


      
   
      
       
